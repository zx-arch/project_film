{"ast":null,"code":"var _jsxFileName = \"D:\\\\my_react_js\\\\project_film\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const search = async q => {\n    if (q.trim() === '') {\n      const fetchMovie = async () => {\n        const URL = \"https://www.omdbapi.com/?s=gen&apikey=b9601493\";\n        const response = await fetch(URL);\n        const data = await response.json();\n        console.log(data.Search);\n        setMovie(data.Search);\n      };\n      fetchMovie();\n    }\n    const URL = `https://www.omdbapi.com/?s=${q}&apikey=b9601493`;\n    console.log(URL);\n    const response = await fetch(URL);\n    const data = await response.json();\n    if (data.Search) {\n      setSearchResults(data.Search);\n    } else {\n      setSearchResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"search-bar\",\n      onSubmit: e => {\n        e.preventDefault();\n        const searchValue = e.target.querySelector('.MovieSearch').value;\n        search(searchValue);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"search film..\",\n        className: \"MovieSearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: searchResults.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: val.Poster,\n            className: \"cover-image\",\n            alt: val.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bJ//Ypm7DkzN1QdPDGZp1UOchjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","movie","setMovie","searchResults","setSearchResults","search","q","trim","fetchMovie","URL","response","fetch","data","json","console","log","Search","className","children","action","onSubmit","e","preventDefault","searchValue","target","querySelector","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","map","val","index","src","Poster","alt","Title","_c","$RefreshReg$"],"sources":["D:/my_react_js/project_film/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [movie, setMovie] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const search = async (q) => {\n    if (q.trim() === '') {\n      const fetchMovie = async () => {\n        const URL = \"https://www.omdbapi.com/?s=gen&apikey=b9601493\";\n        const response = await fetch(URL);\n        const data = await response.json();\n        console.log(data.Search);\n        setMovie(data.Search)\n      }\n      fetchMovie()\n    }\n\n    const URL = `https://www.omdbapi.com/?s=${q}&apikey=b9601493`;\n    console.log(URL);\n    const response = await fetch(URL);\n    const data = await response.json();\n\n    if (data.Search) {\n      setSearchResults(data.Search);\n    } else {\n      setSearchResults([]);\n    }\n  };\n\n  return (\n    <div className='container'>\n      <form\n        action=\"\"\n        className=\"search-bar\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          const searchValue = e.target.querySelector('.MovieSearch').value;\n          search(searchValue);\n        }}\n      >\n        <input\n          placeholder='search film..'\n          className='MovieSearch'\n        />\n        <button className=\"search-btn\" type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      <div className=\"card-container\">\n        {searchResults.map((val, index) => (\n          <div className=\"card\" key={index}>\n            <div className=\"wrapper\">\n              <img src={val.Poster} className=\"cover-image\" alt={val.Title} />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}